{"version":3,"sources":["js/refs.js","js/timer.js","index.js"],"names":["daysC","document","querySelector","hoursC","minsC","secsC","refs","newDate","Date","CountdownTimer","constructor","targetDate","markup","intID","countTime","start","setInterval","currentTime","now","days","pad","Math","floor","hours","mins","secs","insertValues","stop","clearInterval","value","String","padStart","day","hour","minute","second","textContent","myTimer"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXA,MAAOC,SAASC,cAAc,uBAC9BC,OAAQF,SAASC,cAAc,wBAC/BE,MAAOH,SAASC,cAAc,uBAC9BG,MAAOJ,SAASC,cAAc,wBAJnB,QAAA,QAAA;;AC+Df,aA/DA,IAAA,EAAA,EAAA,QAAA,WA+DA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7DA,MAAM,MAAEF,EAAF,OAASG,EAAT,MAAiBC,EAAjB,MAAwBC,GAAUC,EAAxC,QAEA,IAAIC,EAAU,IAAIC,KAOlB,MAAMC,EACFC,YAAYC,EAAYC,GACfA,KAAAA,OAASA,EACTD,KAAAA,WAAaA,EACbE,KAAAA,MAAQ,KACRC,KAAAA,UAAY,EAErBC,QACSF,KAAAA,MAAQG,YAAY,KACjBC,IAAAA,EAAcT,KAAKU,MAClBJ,KAAAA,UAAY,KAAKH,WAAaM,EAE7BE,MAAAA,EAAO,KAAKC,IAAIC,KAAKC,MAAM,KAAKR,UAAa,QAC7CS,EAAQ,KAAKH,IAAIC,KAAKC,MAAO,KAAKR,UAAc,MAAyB,OACzEU,EAAO,KAAKJ,IAAIC,KAAKC,MAAO,KAAKR,UAAc,KAAoB,MACnEW,EAAO,KAAKL,IAAIC,KAAKC,MAAO,KAAKR,UAAa,IAAc,MAC7DY,KAAAA,aAAaP,EAAMI,EAAOC,EAAMC,IACtC,KAGPE,OACIC,cAAc,KAAKf,OAGvBO,IAAIS,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAErCL,aAAaM,EAAKC,EAAMC,EAAQC,GACtB,MAAA,MAAEnC,EAAF,OAASG,EAAT,MAAiBC,EAAjB,MAAwBC,GAAU,KAAKO,OAC7CZ,EAAMoC,YAAcJ,EACpB7B,EAAOiC,YAAcH,EACrB7B,EAAMgC,YAAcF,EACpB7B,EAAM+B,YAAcD,GAI5B,MAAMvB,EAAS,CACXZ,MAAAA,EACAG,OAAAA,EACAC,MAAAA,EACAC,MAAAA,GAGEgC,EAAU,IAAI5B,EAAe,IAAID,KAAK,gBAAiBI,GAQ7DyB,EAAQtB;;AC7DR,aADA,QAAA,oBACA,QAAA","file":"src.37fe9c62.js","sourceRoot":"../src","sourcesContent":["export default {\n    daysC: document.querySelector('[data-value=\"days\"]'),\n    hoursC: document.querySelector('[data-value=\"hours\"]'),\n    minsC: document.querySelector('[data-value=\"mins\"]'),\n    secsC: document.querySelector('[data-value=\"secs\"]'),\n}","import refs from './refs'\n\nconst { daysC, hoursC, minsC, secsC } = refs\n\nlet newDate = new Date()\n\n// const myTimer = new CountdownTimer({\n//   selector: '#timer-1',\n//   targetDate: new Date('Dec 31, 2021'),\n// });\n\nclass CountdownTimer {\n    constructor(targetDate, markup) {\n        this.markup = markup\n        this.targetDate = targetDate\n        this.intID = null;\n        this.countTime = 0;\n    }\n    start() {\n        this.intID = setInterval(() => {\n            let currentTime = Date.now()\n            this.countTime = this.targetDate - currentTime\n            \n            const days = this.pad(Math.floor(this.countTime / (1000 * 60 * 60 * 24)))\n            const hours = this.pad(Math.floor((this.countTime  % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n            const mins = this.pad(Math.floor((this.countTime  % (1000 * 60 * 60)) / (1000 * 60)))\n            const secs = this.pad(Math.floor((this.countTime % (1000 * 60)) / 1000))\n            this.insertValues(days, hours, mins, secs)\n        }, 1000);\n        \n    }\n    stop() {\n        clearInterval(this.intID)\n    }\n\n    pad(value) {\n        return String(value).padStart(2, '0')\n    }\n    insertValues(day, hour, minute, second){\n        const { daysC, hoursC, minsC, secsC } = this.markup\n        daysC.textContent = day\n        hoursC.textContent = hour\n        minsC.textContent = minute\n        secsC.textContent = second\n    }\n}\n\nconst markup = {\n    daysC,\n    hoursC,\n    minsC,\n    secsC,\n}\n\nconst myTimer = new CountdownTimer(new Date('Dec 31, 2021'), markup);\n\n\n// const myTimer = new CountdownTimer({\n//   selector: '#timer-1',\n//   targetDate: new Date('Dec 31, 2021'),\n// });\n\nmyTimer.start()\n// myTimer.stop()","import './sass/main.scss';\nimport './js/timer.js'\n"]}